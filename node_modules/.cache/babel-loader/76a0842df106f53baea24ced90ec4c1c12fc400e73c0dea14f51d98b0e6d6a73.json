{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\github folder\\\\wt project\\\\exercise-tracker\\\\src\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link as ScrollLink } from 'react-scroll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [eventName, setEventName] = useState('');\n  const [eventDate, setEventDate] = useState('');\n  const [eventLink, setEventLink] = useState('');\n  const [eventDescription, setEventDescription] = useState('');\n  const [selectedSection, setSelectedSection] = useState(null);\n  const handleAddEvent = async () => {\n    try {\n      // Send a POST request to your server to add a new event\n      await axios.post('http://localhost:5000/api/add-event', {\n        eventName,\n        eventDate,\n        eventLink,\n        description: eventDescription\n      });\n      alert('Event added successfully!');\n    } catch (error) {\n      console.error(error);\n      alert('Failed to add event. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Admin Dashboard!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-links\",\n      children: [/*#__PURE__*/_jsxDEV(ScrollLink, {\n        to: \"addNewEvent\",\n        smooth: true,\n        duration: 500,\n        onClick: () => setSelectedSection('addNewEvent'),\n        className: `section-link ${selectedSection === 'addNewEvent' && 'active'}`,\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(ScrollLink, {\n        to: \"editExistingEvent\",\n        smooth: true,\n        duration: 500,\n        onClick: () => setSelectedSection('editExistingEvent'),\n        className: `section-link ${selectedSection === 'editExistingEvent' && 'active'}`,\n        children: \"Edit Existing Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(ScrollLink, {\n        to: \"announceResults\",\n        smooth: true,\n        duration: 500,\n        onClick: () => setSelectedSection('announceResults'),\n        className: `section-link ${selectedSection === 'announceResults' && 'active'}`,\n        children: \"Announce Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"addNewEvent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Event Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventName,\n        onChange: e => setEventName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Event Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventDate,\n        onChange: e => setEventDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Event Link:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: eventLink,\n        onChange: e => setEventLink(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Event Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: eventDescription,\n        onChange: e => setEventDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddEvent,\n        children: \"Add Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }, this), selectedSection === 'editExistingEvent' && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"editExistingEvent\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Existing Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }, this), selectedSection === 'announceResults' && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"announceResults\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Announce Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"dBK30KT5Nezq0Fem429cAC82Ll4=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","ScrollLink","jsxDEV","_jsxDEV","AdminDashboard","_s","eventName","setEventName","eventDate","setEventDate","eventLink","setEventLink","eventDescription","setEventDescription","selectedSection","setSelectedSection","handleAddEvent","post","description","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","smooth","duration","onClick","id","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/MERN/github folder/wt project/exercise-tracker/src/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link as ScrollLink } from 'react-scroll';\r\nconst AdminDashboard = () => {\r\n  const [eventName, setEventName] = useState('');\r\n  const [eventDate, setEventDate] = useState('');\r\n  const [eventLink, setEventLink] = useState('');\r\n  const [eventDescription, setEventDescription] = useState('');\r\n  const [selectedSection, setSelectedSection] = useState(null);\r\n\r\n\r\n\r\n  const handleAddEvent = async () => {\r\n    try {\r\n      // Send a POST request to your server to add a new event\r\n      await axios.post('http://localhost:5000/api/add-event', {\r\n        eventName,\r\n        eventDate,\r\n        eventLink,\r\n        description: eventDescription,\r\n      });\r\n      alert('Event added successfully!');\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Failed to add event. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome to the Admin Dashboard!</h2>\r\n\r\n{/* Navigation Links */}\r\n<div className=\"section-links\">\r\n  <ScrollLink\r\n    to=\"addNewEvent\"\r\n    smooth={true}\r\n    duration={500}\r\n    onClick={() => setSelectedSection('addNewEvent')}\r\n    className={`section-link ${selectedSection === 'addNewEvent' && 'active'}`}\r\n  >\r\n    Add New Event\r\n  </ScrollLink>\r\n  <ScrollLink\r\n    to=\"editExistingEvent\"\r\n    smooth={true}\r\n    duration={500}\r\n    onClick={() => setSelectedSection('editExistingEvent')}\r\n    className={`section-link ${selectedSection === 'editExistingEvent' && 'active'}`}\r\n  >\r\n    Edit Existing Event\r\n  </ScrollLink>\r\n  <ScrollLink\r\n    to=\"announceResults\"\r\n    smooth={true}\r\n    duration={500}\r\n    onClick={() => setSelectedSection('announceResults')}\r\n    className={`section-link ${selectedSection === 'announceResults' && 'active'}`}\r\n  >\r\n    Announce Results\r\n  </ScrollLink>\r\n</div>\r\n\r\n{/* Add New Event Section */}\r\n<div id=\"addNewEvent\">\r\n  <h3>Add New Event</h3>\r\n  <label>Event Name:</label>\r\n  <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\r\n\r\n  <label>Event Date:</label>\r\n  <input type=\"text\" value={eventDate} onChange={(e) => setEventDate(e.target.value)} />\r\n\r\n  <label>Event Link:</label>\r\n  <input type=\"text\" value={eventLink} onChange={(e) => setEventLink(e.target.value)} />\r\n\r\n  <label>Event Description:</label>\r\n  <textarea\r\n    value={eventDescription}\r\n    onChange={(e) => setEventDescription(e.target.value)}\r\n  ></textarea>\r\n\r\n  <button onClick={handleAddEvent}>Add Event</button>\r\n</div>\r\n\r\n{/* Edit Existing Event Section */}\r\n{selectedSection === 'editExistingEvent' && (\r\n  <div id=\"editExistingEvent\">\r\n    {/* Implement logic to fetch and display existing events for editing */}\r\n    <h3>Edit Existing Event</h3>\r\n  </div>\r\n)}\r\n\r\n{/* Announce Results Section */}\r\n{selectedSection === 'announceResults' && (\r\n  <div id=\"announceResults\">\r\n    {/* Implement logic to fetch and display past events for announcing results */}\r\n    <h3>Announce Results</h3>\r\n  </div>\r\n)}\r\n</div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}