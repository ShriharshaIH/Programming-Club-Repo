{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\github folder\\\\wt project\\\\exercise-tracker\\\\src\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"; // Import Link from React Router\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [eventName, setEventName] = useState(\"\");\n  const [eventDate, setEventDate] = useState(\"\");\n  const [eventLink, setEventLink] = useState(\"\");\n  const [eventDescription, setEventDescription] = useState(\"\"); // New state for description\n  const [events, setEvents] = useState([]); // State to store events for editing and announcing\n\n  useEffect(() => {\n    // Fetch events when the component mounts\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/events\");\n        setEvents(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchEvents();\n  }, []); // Run the effect only once when the component mounts\n\n  const handleAddEvent = async () => {\n    try {\n      // Send a POST request to your server to add a new event\n      await axios.post(\"http://localhost:5000/api/add-event\", {\n        eventName,\n        eventDate,\n        eventLink,\n        description: eventDescription // Include description in the request\n      });\n      alert(\"Event added successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Failed to add event. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to the Admin Dashboard!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-links\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/add-new-event\",\n        children: \"Add New Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-existing-event\",\n        children: \"Edit Existing Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/announce-results\",\n        children: \"Announce Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Event Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: eventName,\n      onChange: e => setEventName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Event Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: eventDate,\n      onChange: e => setEventDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Event Link:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: eventLink,\n      onChange: e => setEventLink(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Event Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: eventDescription,\n      onChange: e => setEventDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddEvent,\n      children: \"Add Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"PNVo5UFNIsaYQnWPKoj72tXIQKA=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsxDEV","_jsxDEV","AdminDashboard","_s","eventName","setEventName","eventDate","setEventDate","eventLink","setEventLink","eventDescription","setEventDescription","events","setEvents","fetchEvents","response","get","data","error","console","handleAddEvent","post","description","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/MERN/github folder/wt project/exercise-tracker/src/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\"; // Import Link from React Router\r\n\r\nconst AdminDashboard = () => {\r\n  const [eventName, setEventName] = useState(\"\");\r\n  const [eventDate, setEventDate] = useState(\"\");\r\n  const [eventLink, setEventLink] = useState(\"\");\r\n  const [eventDescription, setEventDescription] = useState(\"\"); // New state for description\r\n  const [events, setEvents] = useState([]); // State to store events for editing and announcing\r\n\r\n  useEffect(() => {\r\n    // Fetch events when the component mounts\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/events\");\r\n        setEvents(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []); // Run the effect only once when the component mounts\r\n\r\n\r\n\r\n\r\n  const handleAddEvent = async () => {\r\n    try {\r\n      // Send a POST request to your server to add a new event\r\n      await axios.post(\"http://localhost:5000/api/add-event\", {\r\n        eventName,\r\n        eventDate,\r\n        eventLink,\r\n        description: eventDescription, // Include description in the request\r\n      });\r\n      alert(\"Event added successfully!\");\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert(\"Failed to add event. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Welcome to the Admin Dashboard!</h2>\r\n\r\n      {/* Add your admin dashboard content here */}\r\n      <div className=\"section-links\">\r\n        <Link to=\"/add-new-event\">Add New Event</Link>\r\n        <Link to=\"/edit-existing-event\">Edit Existing Event</Link>\r\n        <Link to=\"/admin/announce-results\">Announce Results</Link>\r\n      </div>\r\n\r\n      <h3>Add New Event</h3>\r\n      <label>Event Name:</label>\r\n      <input type=\"text\" value={eventName} onChange={(e) => setEventName(e.target.value)} />\r\n\r\n      <label>Event Date:</label>\r\n      <input type=\"text\" value={eventDate} onChange={(e) => setEventDate(e.target.value)} />\r\n\r\n      <label>Event Link:</label>\r\n      <input type=\"text\" value={eventLink} onChange={(e) => setEventLink(e.target.value)} />\r\n\r\n      <label>Event Description:</label>\r\n      <textarea\r\n        value={eventDescription}\r\n        onChange={(e) => setEventDescription(e.target.value)}\r\n      ></textarea>\r\n\r\n      <button onClick={handleAddEvent}>Add Event</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}