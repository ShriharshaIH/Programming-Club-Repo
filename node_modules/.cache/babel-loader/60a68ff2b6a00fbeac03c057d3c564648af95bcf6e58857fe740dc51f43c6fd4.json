{"ast":null,"code":"var _jsxFileName = \"D:\\\\MERN\\\\github folder\\\\wt project\\\\exercise-tracker\\\\src\\\\loginComp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './loginComp.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginComp() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleClick = async () => {\n    if (username.trim() === '' || password.trim() === '') {\n      alert('Please enter both username and password');\n    } else {\n      try {\n        // Send a POST request to the server for login\n        const response = await axios.post('http://localhost:3001/login', {\n          username,\n          password\n        });\n\n        // Check the response from the server\n        if (response.data.success) {\n          alert('Club Admin Login successful!');\n        } else {\n          alert('Invalid username or password');\n        }\n      } catch (error) {\n        console.error('Error during login:', error);\n        alert('An error occurred during login');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginComp, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = LoginComp;\nexport default LoginComp;\nvar _c;\n$RefreshReg$(_c, \"LoginComp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","LoginComp","_s","username","setUsername","password","setPassword","handleClick","trim","alert","response","post","data","success","error","console","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MERN/github folder/wt project/exercise-tracker/src/loginComp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './loginComp.css';\r\nimport axios from 'axios';\r\n\r\nfunction LoginComp() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleClick = async () => {\r\n    if (username.trim() === '' || password.trim() === '') {\r\n      alert('Please enter both username and password');\r\n    } else {\r\n      try {\r\n        // Send a POST request to the server for login\r\n        const response = await axios.post('http://localhost:3001/login', {\r\n          username,\r\n          password,\r\n        });\r\n\r\n        // Check the response from the server\r\n        if (response.data.success) {\r\n          alert('Club Admin Login successful!');\r\n        } else {\r\n          alert('Invalid username or password');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during login:', error);\r\n        alert('An error occurred during login');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {/* ... (your existing JSX code) */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginComp;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIJ,QAAQ,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIH,QAAQ,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACpDC,KAAK,CAAC,yCAAyC,CAAC;IAClD,CAAC,MAAM;MACL,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,6BAA6B,EAAE;UAC/DR,QAAQ;UACRE;QACF,CAAC,CAAC;;QAEF;QACA,IAAIK,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;UACzBJ,KAAK,CAAC,8BAA8B,CAAC;QACvC,CAAC,MAAM;UACLA,KAAK,CAAC,8BAA8B,CAAC;QACvC;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CL,KAAK,CAAC,gCAAgC,CAAC;MACzC;IACF;EACF,CAAC;EAED,oBACET,OAAA;IAAKgB,SAAS,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE3B,CAAC;AAEV;AAAClB,EAAA,CAjCQD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}